소멸자가 없을 때는 계속 오류가 발생했다.
결과값은 잘 뽑아내는데
입력값:
4
0 1 2 3
4 0 5 6
7 1 0 2
3 4 5 0
등을 입력할 시 경고음과 함께 정상적인 종료 문구도 뜨지 않았다.

>>>
public:
	~class() {};

라는 기본적인 소멸자만 적어줘도 오류는 발생하지 않는다.

???
소멸자가 어떤 역할을 하는지 찾아보기.

!!!
검색해본 결과 -

예를 들어 생성자에서 new 키워드를 이용해 동적으로 메모리를 할당했다면, 소멸자에서는 delete 키워드를 이용해 동적으로 할당받은 메모리를 반환해야 합니다.
그렇지 않으면 해당 프로그램에 메모리 누수(memory leak)가 계속해서 발생하게 될 것입니다.

class를 선언할 때 쓴 동적 할당 new -
int** S = new int* [N];
문구 때문에 발생한 오류인 것 같다.
왠지 경고음 난 후 몇 초 멍 때리다 경고창 뜨더라.
